name: Publish

on:
  push:
    tags:
      - "*"

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [macos-latest, windows-latest, ubuntu.latest]
        include:
          - os: "ubuntu-latest"
            target: "x86_64-unknown-linux-gnu"
            asset: "libctehxk2.so"
          - os: "macOS-latest"
            target: "x86_64-apple-darwin"
            asset: "libctehxk2.dylib"
          - os: "windows-latest"
            target: "i686-pc-windows-msvc"
            asset: "ctehxk2-x86.dll"
          - os: "windows-latest"
            target: "x86_64-pc-windows-msvc"
            asset: "ctehxk2-x64.dll"
    steps:
      - uses: actions/checkout@v2
      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ github.ref }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ github.ref }}
          draft: false
          prerelease: false
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/${{ matrix.asset }}
          asset_name: ${{ matrix.asset }}
